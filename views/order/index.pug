extends ../public/layout


block title 
    title Orders


//- orderId: string;
//-   accountId: string;
//-   fileId: string;
//-   apmId: string;
//-   cost: number;
//-   status: string;
//-   date: Date;
//-   rating: number;
//-   statusReason: string;
//-   hasPaid: boolean;
//-   targetApm: string;

block content
    style
        include ./index.css
    h1 All orders
    br
    .input-group.rounded
        input.form-control.rounded(type='text' placeholder='Email / Full name / Phone' aria-label='Search' aria-describedby='search-addon' onkeydown="search(this)" value=query.search)
        span#search-addon.input-group-text.border-0
        i.fas.fa-search
    br
    nav(aria-label="...")
      ul.pagination#pagination
        li.page-item
          a.page-link(onclick='previous()') Previous
        li.page-item(onclick='next()')
          a.page-link Next
    table
        tr
            th No. 
            th Order ID
            th Account ID
            th file ID
            th Cost
            th Date
            th Status
        
        each order, index in payload
            tr(onclick='changeWindow("' + order.orderid + '")')
                td #{startIndex+index + 1}
                td #{order.orderid}
                td #{order.accountid}
                td #{order.fileid}
                td RM #{order.cost}
                td #{order.date}
                td #{order.status}

    script.
        function changeWindow(orderid) {
            window.location.href=`/order/${orderid}`
        }

        function search(ele) {
            if(event.key === 'Enter') {
                window.location.href=`/order?search=${ele.value}`       
            }
        }

        function next() {
            const urlParams = new URLSearchParams(window.location.search)
            let currentPage = urlParams.get('page') ?? '0'
            currentPage = parseInt(currentPage) + 1
            window.location.href='/order?page=' + currentPage.toString()
        }
        function previous() {
            const urlParams = new URLSearchParams(window.location.search)
            let currentPage = urlParams.get('page') ?? '1'
            if(currentPage <= 1) {
                 window.location.href='/order?page=1'
            }
            else {
                currentPage = parseInt(currentPage) - 1
                window.location.href='/order?page=' + currentPage.toString()
            }
        }
        function getRealIndex(index) {
            const urlParams = new URLSearchParams(window.location.search)
            let currentPage = urlParams.get('page') ?? '0'
            currentPage = parseInt(currentPage) - 1
            return index + (50 * currentPage) + 1
        }

       


